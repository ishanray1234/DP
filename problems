//LCS
#include <stdio.h>
#include<string.h>

int max(int a, int b)
{
    return (a > b)? a : b;
}

int lcs(char* X, char* Y, int m, int n,
        int dp[m+1][n+1])
{
    if (m == 0 || n == 0)
        return 0;
    if (X[m - 1] == Y[n - 1])
        return dp[m][n] = 1 + lcs(X, Y, m - 1, n - 1, dp);
 
    if (dp[m][n] != -1) {
        return dp[m][n];
    }
    return dp[m][n] = max(lcs(X, Y, m, n - 1, dp),
                          lcs(X, Y, m - 1, n, dp));
}

int main()
{
    char X[] = "ABCDe";
    char Y[] = "BFFFCe";
 
    int m = strlen(X);
    int n = strlen(Y);
    
    int dp[m+1][n+1];
    for(int i=0;i<=m;i++)
    {
        for(int j=0;j<=n;j++)
        {
            dp[i][j]=-1;
        }
    }
    
    printf("%d",lcs(X,Y,m,n,dp));

    return 0;
}


//for Longest Increasing Subsequence problem, sort the sequence and convert the two arrays into a LCS problem
